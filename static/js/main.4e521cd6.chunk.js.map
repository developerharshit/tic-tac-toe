{"version":3,"sources":["Cross.js","Circle.js","Score.js","Board.js","Header.js","App.js","index.js"],"names":["cross","props","className","style","isWinner","backgroundColor","transform","top","circle","borderColor","Score","this","score1","scoreT","score2","onClick","reset","Component","Board","state","square","disabled","winners","chance","player","system","setMove","id","Cross","Circle","onClickHandler","resetGame","undefined","temp","setState","push","tempScore","console","log","isGameDraw","i","setTimeout","setSystemMove","resetCompleteGame","leftChance","ans","Math","floor","random","length","A","arr_size","j","k","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e521cd6.chunk.js","sourcesContent":["import React from 'react'\n\nconst cross = (props) => {\n    const getStyle = () => {\n        if (props.isWinner === true) return { backgroundColor: 'grey', transform: 'scale(0.7)', top: '30px' }\n        else return null;\n    }\n    return (\n        <div className=\"x\" style={getStyle()} ></div>\n    )\n}\n\nexport default cross\n","import React from 'react'\n\nconst circle = (props) => {\n    const getStyle = () => {\n        if (props.isWinner === true) return { borderColor: 'grey', transform: 'scale(0.7)' }\n        else return null;\n    }\n    return (\n        <div className=\"o\" style={getStyle()}></div>\n    )\n}\n\nexport default circle\n","import React, { Component } from 'react'\n\nclass Score extends Component {\n\n    render() {\n        return (\n            <div className=\"scores\">\n                <p className=\"player1\">\n                    <span className=\"p1\">Player</span>\n                    (x)\n                    <span className=\"score\">{this.props.score1}</span>\n                </p>\n                <p className=\"ties\">\n                    Tie<span className=\"score\">{this.props.scoreT}</span>\n                </p>\n                <p className=\"player2\">\n                    <span className=\"p1\">Computer</span>\n                    (o)\n                    <span className=\"score\">{this.props.score2}</span>\n                </p>\n                <p className=\"reset\" onClick={this.props.reset}>\n                    <span className=\"p1\">Reset</span>\n                    <span className=\"score\">Score</span>\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default Score\n","import React, { Component } from 'react'\nimport Cross from './Cross'\nimport Circle from './Circle'\nimport Score from './Score';\n\nclass Board extends Component {\n    state = {\n        square: {},\n        disabled: false,\n        winners: {},\n        score1: 0,\n        score2: 0,\n        scoreT: 0\n    }\n\n    chance = 1;\n    player = [];\n    system = [];\n\n    componentDidMount() {\n        if (this.chance === 2) {\n            this.setSystemMove()\n        }\n    }\n\n    setMove = (id) => {\n        if (this.state.square[id] === 1) return <Cross isWinner={this.state.winners[id]} />;\n        else if (this.state.square[id] === 2) return <Circle isWinner={this.state.winners[id]} />\n        else return null;\n    }\n\n    onClickHandler = (id) => {\n        // Reset Game\n        if (this.state.disabled) {\n            this.resetGame()\n            return;\n        }\n        // Check for duplicate moves\n        if (this.state.square[id] !== undefined) return;\n\n        // Upadting the move\n        const temp = this.state.square;\n        temp[id] = this.chance;\n        this.setState({ square: temp })\n\n        // next move\n        if (this.chance === 1) {\n            this.chance = 2;\n            this.player.push(id);\n            if (this.isWinner(this.player)) {\n                let tempScore = this.state.score1;\n                console.log('player win');\n                this.setState({ disabled: true, score1: tempScore + 1 })\n            }\n            else if (this.isGameDraw()) {\n                let tempScore = this.state.scoreT;\n                let temp = {}\n                for (let i = 0; i < 10; i++) {\n                    temp[i + 1] = true;\n                }\n                this.setState({ scoreT: tempScore + 1, disabled: true, winners: temp })\n            }\n            else {\n                setTimeout(() => {\n                    this.setSystemMove()\n                }, 250);\n            }\n        }\n        else {\n            this.chance = 1;\n            this.system.push(id);\n            if (this.isWinner(this.system)) {\n                let tempScore = this.state.score2;\n                console.log('system win');\n                this.setState({ disabled: true, score2: tempScore + 1 })\n            }\n            else if (this.isGameDraw()) {\n                let tempScore = this.state.scoreT;\n                let temp = {}\n                for (let i = 0; i < 10; i++) {\n                    temp[i + 1] = true;\n                }\n                this.setState({ scoreT: tempScore + 1, disabled: true, winners: temp })\n            }\n        }\n    }\n\n    resetGame = () => {\n        this.setState({ square: {}, disabled: false, winners: {} }, () => {\n            this.player = [];\n            this.system = [];\n            if (this.chance === 2) {\n                setTimeout(() => {\n                    this.setSystemMove()\n                }, 250);\n            }\n        })\n    }\n\n    resetCompleteGame = () => {\n        this.setState({ square: {}, disabled: false, winners: {}, score1: 0, score2: 0, scoreT: 0 })\n        this.player = [];\n        this.system = [];\n        this.chance = 1;\n    }\n\n    setSystemMove = () => {\n        let leftChance = [];\n        for (let i = 1; i <= 9; i++) {\n            if (this.state.square[i] === undefined) {\n                leftChance.push(i)\n            }\n        }\n\n        let ans = Math.floor(Math.random() * (leftChance.length))\n        this.onClickHandler(leftChance[ans])\n    }\n\n    isGameDraw = () => {\n        let leftChance = [];\n        for (let i = 1; i <= 9; i++) {\n            if (this.state.square[i] === undefined) {\n                leftChance.push(i)\n            }\n        }\n\n        if (leftChance.length === 0) {\n            this.setState({ disabled: true })\n            console.log(\"Game is Draw\");\n            return true;\n        }\n        return false\n    }\n\n    isWinner = (A) => {\n        let sum = 15;\n        let arr_size = A.length;\n        let temp = {};\n        for (let i = 0; i < 10; i++) {\n            temp[i + 1] = true;\n        }\n        for (let i = 0; i < arr_size - 2; i++) {\n            for (let j = i + 1; j < arr_size - 1; j++) {\n                for (let k = j + 1; k < arr_size; k++) {\n                    if (A[i] + A[j] + A[k] === sum) {\n                        temp[A[i]] = false;\n                        temp[A[j]] = false;\n                        temp[A[k]] = false;\n                        this.setState({ winners: temp })\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board\">\n                    <div className=\"square left top\" onClick={() => this.onClickHandler(2)}>\n                        {this.setMove(2)}\n                    </div>\n                    <div className=\"square top\" onClick={() => this.onClickHandler(7)}>\n                        {this.setMove(7)}\n                    </div>\n                    <div className=\"square top right\" onClick={() => this.onClickHandler(6)}>\n                        {this.setMove(6)}\n                    </div>\n                    <div className=\"square left\" onClick={() => this.onClickHandler(9)}>\n                        {this.setMove(9)}\n                    </div>\n                    <div className=\"square\" onClick={() => this.onClickHandler(5)}>\n                        {this.setMove(5)}\n                    </div>\n                    <div className=\"square right\" onClick={() => this.onClickHandler(1)}>\n                        {this.setMove(1)}\n                    </div>\n                    <div className=\"square left bottom\" onClick={() => this.onClickHandler(4)}>\n                        {this.setMove(4)}\n                    </div>\n                    <div className=\"square bottom\" onClick={() => this.onClickHandler(3)}>\n                        {this.setMove(3)}\n                    </div>\n                    <div className=\"square right bottom\" onClick={() => this.onClickHandler(8)}>\n                        {this.setMove(8)}\n                    </div>\n                </div>\n                <Score reset={this.resetCompleteGame} score1={this.state.score1} score2={this.state.score2} scoreT={this.state.scoreT} />\n            </div>\n        )\n    }\n}\n\nexport default Board\n","import React from 'react'\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <p>TIC TAC TOE</p>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { Component } from 'react'\nimport Board from './Board'\nimport Header from './Header'\nimport './styles.css'\n\n\nexport class App extends Component {\n    render() {\n        return (\n            <div className='main'>\n                <Header />\n                <Board />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}